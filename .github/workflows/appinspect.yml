name: AppInspect

on: push
  # push:
  #   paths:
  #     - packages/**

  # build:
  #    uses: artemrys/workflow-splunk-addon/.github/workflows/reusable-build-release.yaml@v0.3.0
jobs:
  build:
    name: Generate App Bundle via Splunk
    runs-on: ubuntu-latest
    services:
      splunk:
        image: splunk/splunk:9.1.3
        env:
          SPLUNK_START_ARGS: --answer-yes --no-prompt --accept-license
          SPLUNK_PASSWORD: password
          SPLUNK_APPS_URL: https://splunkbase.splunk.com/app/2962/release/4.2.0/download
          SPLUNKBASE_USERNAME: ${{ secrets.SPLUNKBASE_USERNAME }}
          SPLUNKBASE_PASSWORD: ${{ secrets.SPLUNKBASE_PASSWORD }}
        options: >-
          --health-interval 30s
          --health-timeout 5s
          --health-retries 5
          --name splunk
        ports:
          - 8000:8000
          - 8089:8089
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy app to service container and validate
        # NOTE using volume mapping to add the app to the container will NOT work since checkout hasn't happened yet
        run: |
          docker cp packages/TA-sw-demo ${{ job.services.splunk.id }}:/opt/splunk/etc/apps/TA-sw-demo
          docker exec -i ${{ job.services.splunk.id }} ls -a /opt/splunk/etc/apps
          docker exec -i ${{ job.services.splunk.id }} ls -a /opt/splunk/etc/apps/TA-sw-demo

      - name: Set container IP as env variable
        run: |
          echo "SPLUNK_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' ${{ job.services.splunk.id }})" >> $GITHUB_ENV

      - name: Check AoB installation
        run: |
          curl --retry-delay 5 --retry 5 -f -k -u admin:password https://$SPLUNK_IP:8089/services/apps/local/splunk_app_addon-builder?output_mode=json -X GET

      - name: Package app
        run: |
          mkdir -p build
          cd build
          curl -k -u admin:password -LO https://$SPLUNK_IP:8000/custom/splunk_app_addon-builder/app_package/file_download?app_name=TA-sw-demo
          ls ./build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: packaged_app
          path: build/*


  appinspect-cli:
    name: AppInspect CLI Validation
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install splunk-appinspect

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: packaged_app
      
      - name: Get artifact name
        id: app-name
        run: |
          app_package=$(ls -1 *gz | xargs basename)
          echo "package=${app_package}" >> $GITHUB_OUTPUT
      
      - name: Run AppInspect
        run: |
          splunk-appinspect inspect ${{ steps.app-name.outputs.package }} --output-file appinspect.json
          exit `cat appinspect.json | jq '.summary.failure'`
        working-directory: ./packages
