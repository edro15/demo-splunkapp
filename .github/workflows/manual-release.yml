# This is a basic workflow that is manually triggered

name: Bump Version

on: 
  workflow_dispatch:
    inputs:
      bumpType:
        description: 'Bump type'
        required: true
        default: "minor"
      notes:
        description: 'Changelog notes'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      old_version: ${{ steps.bumpversion.outputs.old_ver }}
      version: ${{ steps.bumpversion.outputs.new_ver }}
    # TODO maybe verify bumpType is valid (major, minor, patch)
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Bump version and push tag
        id: bumpversion
        uses: jaumann/github-bumpversion-action@v0.0.7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: ${{ github.event.inputs.bumpType }}
          # DRY_RUN: true
      # - name: Testing bumping
      #   run: |
      #     echo "Old version: ${{ steps.bumpversion.outputs.old_ver }}"
      #     echo "New version: ${{ steps.bumpversion.outputs.new_ver }}"
      #     echo "Bump type: ${{ steps.bumpversion.outputs.part }}"
      - name: Push
        run: |
          remote_repo="https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"
          git push "${remote_repo}" HEAD:${GITHUB_REF} --follow-tags --tags

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Build changelog
        id: changelog
        run: |
          MSG=$(git log v${{ needs.build.outputs.old_version }}..v${{ needs.build.outputs.version }} --oneline --decorate --pretty=format:%s)
          echo "::set-output name=message:${MSG}"
      
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.build.outputs.version }}
          release_name: v${{ needs.build.outputs.version }}
          body: |
            ## Changelog
            ${{ github.event.inputs.notes }}
            ${{ steps.changelog.outputs.message }}
          draft: false
          prerelease: false
  
  publish:
    needs: release
    name: Deploy Release to Splunkbase
    runs-on: ubuntu-latest
    steps:
      - name: Placeholder for publish
        run: |
          echo "Placeholder for Splunkbase upload"